error: used `unwrap()` on `an Option` value
  --> $DIR/unwrap.rs:5:13
   |
LL |     let _ = opt.unwrap();
   |             ^^^^^^^^^^^^
   |
   = note: `-D clippy::unwrap-used` implied by `-D warnings`
   = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message

error: used `unwrap()` on `a Result` value
  --> $DIR/unwrap.rs:10:13
   |
LL |     let _ = res.unwrap();
   |             ^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message

error: used `unwrap()` on `an Option` value
  --> $DIR/unwrap.rs:15:13
   |
LL |     let _ = v.get(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message

error: used `unwrap()` on `an Option` value
  --> $DIR/unwrap.rs:20:13
   |
LL |     let _ = v.get_mut(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise
  --> $DIR/unwrap.rs:26:13
   |
LL |     let _ = v.get(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^ help: try this: `&v[0]`
   |
   = note: `-D clippy::get-unwrap` implied by `-D warnings`

error: used `unwrap()` on `an Option` value
  --> $DIR/unwrap.rs:26:13
   |
LL |     let _ = v.get(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise
  --> $DIR/unwrap.rs:32:13
   |
LL |     let _ = v.get_mut(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut v[0]`

error: used `unwrap()` on `an Option` value
  --> $DIR/unwrap.rs:32:13
   |
LL |     let _ = v.get_mut(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise
  --> $DIR/unwrap.rs:39:13
   |
LL |     let _ = v.get(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^ help: try this: `&v[0]`

error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise
  --> $DIR/unwrap.rs:46:13
   |
LL |     let _ = v.get_mut(0).unwrap();
   |             ^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut v[0]`

error: aborting due to 10 previous errors

